<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="task_mb5_f2l_nfb">
    <title>How to use Slate for API Reference Documentation</title>
    <shortdesc>Lists the high-level steps to use Slate for your API reference
        documentation</shortdesc>
    <taskbody>
        <context>
            <p><xref href="https://github.com/lord/slate" format="html" scope="external">Lord's
                    Slate</xref> is a popular method of representing REST APIs. You can capture your
                endpoint details, request and response parameters and even provide code examples for
                as many languages you support. This topic provides high-level steps to install Slate
                and publish your API documentation.</p>
        </context>
        <steps>
            <step>
                <cmd>Follow the installation instructions in the <xref
                        href="https://github.com/lord/slate" format="html" scope="external"
                        >Slate's</xref> website.</cmd>
                <info>
                    <note>Make sure to create a fork of the repository before you clone the
                        fork.</note>
                </info>
            </step>
            <step>
                <cmd>Edit the <codeph>index.html.md</codeph> file to include your API related
                    information.</cmd>
            </step>
            <step>
                <cmd>To change the ouput color theme, edit the <codeph>_variables.scss</codeph> file
                    located in <codeph>source\stylesheets</codeph></cmd>
            </step>
            <step>
                <cmd>You can also try your hands at screen.css.scss and print.css.scss to change the
                    way the css elements are configured.</cmd>
            </step>
            <step>
                <cmd>To change the logo, replace the <codeph>logo.png</codeph> file in the
                        <codeph>images</codeph> folder with your custom logo.</cmd>
            </step>
            <step>
                <cmd>If you are satisfied with the change, you can generate the help by running the
                    following command:</cmd>
                <info>
                    <codeblock>middleman build clean</codeblock>
                </info>
            </step>
            <step>
                <cmd>If the build is successful, run:</cmd>
                <info>
                    <codeblock>bundle exec middleman server</codeblock>
                </info>
            </step>
        </steps>
    </taskbody>
</task>
